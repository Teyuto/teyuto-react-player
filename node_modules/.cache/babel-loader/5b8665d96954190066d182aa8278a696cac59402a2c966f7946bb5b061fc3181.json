{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\nconst TeyutoPlayer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  posElem,\n  obj,\n  onPlay,\n  onPause,\n  onTimeUpdate,\n  onVolumeChange\n}, ref) => {\n  _s();\n  const [iframe, setIframe] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentVolume, setCurrentVolume] = useState(1); // Assuming the volume ranges from 0 to 1\n  const idVideo = obj.id;\n  useEffect(() => {\n    if (!obj.channel) {\n      console.error(\"Missing channel header\");\n      return;\n    }\n    console.log(\"INIT Teyuto Player SDK\");\n    const channel = obj.channel;\n    const options = obj.options;\n    const defaults = {\n      height: 315,\n      width: 560,\n      autoplay: 'on',\n      muted: 'off',\n      controls: 'on',\n      playbackRates: 'on',\n      qualitySelector: 'on',\n      playerColor: '',\n      loop: 'off',\n      captions: 'on',\n      pip: 'off',\n      seekButtons: 'off',\n      lowLatency: 'off',\n      token: ''\n    };\n    const finalOptions = {\n      ...defaults,\n      ...options\n    };\n    const urlIframe = `https://teyuto.tv/video/player?w=${idVideo}&cid=${channel}&token=${finalOptions.token}&auto=${finalOptions.autoplay}&muted=${finalOptions.muted}&controls=${finalOptions.controls}&playbackRates=${finalOptions.playbackRates}&qualitySelector=${finalOptions.qualitySelector}&playerColor=${finalOptions.playerColor}&loop=${finalOptions.loop}&captions=${finalOptions.captions}&seekButtons=${finalOptions.seekButtons}&lowLatency=${finalOptions.lowLatency}`;\n    const iframeElement = document.getElementById(`iframePlayerTeyuto-${idVideo}`);\n    if (!iframeElement) {\n      // If the iframe doesn't exist, create it\n      let videoframe;\n      if (finalOptions.responsive !== 'on') {\n        videoframe = `<iframe id=\"iframePlayerTeyuto-${idVideo}\" width=\"${finalOptions.width}\" height=\"${finalOptions.height}\" src=\"${urlIframe}\" frameborder=\"0\" allow=\"autoplay\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" scrolling=\"no\"></iframe>`;\n      } else {\n        videoframe = `<div style=\"position: relative;padding-bottom: 56.25%;height: 0; overflow: hidden;\"><iframe id=\"iframePlayerTeyuto-${idVideo}\" style=\"position: absolute;top: 0;left: 0;width: 100%;height: 100%;\" src=\"${urlIframe}\" frameborder=\"0\" allow=\"autoplay\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" scrolling=\"no\"></iframe></div>`;\n      }\n      document.querySelector(posElem).innerHTML = videoframe;\n      setIframe(document.getElementById(`iframePlayerTeyuto-${idVideo}`));\n    } else {\n      // If the iframe already exists, update its properties\n      iframeElement.src = urlIframe;\n      iframeElement.width = finalOptions.width;\n      iframeElement.height = finalOptions.height;\n    }\n  }, [obj, posElem, idVideo]);\n  useImperativeHandle(ref, () => ({\n    play: () => {\n      iframe.contentWindow.postMessage({\n        function: \"play\"\n      }, '*');\n    },\n    pause: () => {\n      iframe.contentWindow.postMessage({\n        function: \"pause\"\n      }, '*');\n    },\n    getCurrentTime: () => {\n      return currentTime;\n    },\n    setCurrentTime: param => {\n      iframe.contentWindow.postMessage({\n        function: \"setCurrentTime\",\n        param: param\n      }, '*');\n    },\n    mute: () => {\n      iframe.contentWindow.postMessage({\n        function: \"mute\"\n      }, '*');\n    },\n    unmute: () => {\n      iframe.contentWindow.postMessage({\n        function: \"unmute\"\n      }, '*');\n    },\n    setVolume: param => {\n      iframe.contentWindow.postMessage({\n        function: \"setVolume\",\n        param: param\n      }, '*');\n    },\n    getVolume: () => {\n      return currentVolume;\n    },\n    on: (...args) => {\n      document.querySelector(posElem).addEventListener(...args);\n    }\n  }));\n  useEffect(() => {\n    const handleMessage = ({\n      data\n    }) => {\n      try {\n        let event = JSON.parse(data);\n        console.log(event);\n        if (event.type === 'currentTime') {\n          setCurrentTime(event.values.currentTime);\n          if (onTimeUpdate) onTimeUpdate(event.values.currentTime);\n        } else if (event.type === 'volume') {\n          setCurrentVolume(event.values.currentVolume);\n          if (onVolumeChange) onVolumeChange(event.values.currentVolume);\n        } else {\n          document.querySelector(posElem).dispatchEvent(new CustomEvent(event.type, {\n            detail: {\n              idVideo: event.idVideo,\n              data: event.data\n            }\n          }));\n          if (event.type === 'play' && onPlay) onPlay();\n          if (event.type === 'pause' && onPause) onPause();\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [onPlay, onPause, onTimeUpdate, onVolumeChange, posElem]);\n  return null;\n}, \"z5a3lD9f6UNvwHMPIDeAxp7MRlU=\")), \"z5a3lD9f6UNvwHMPIDeAxp7MRlU=\");\n_c2 = TeyutoPlayer;\nexport default TeyutoPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"TeyutoPlayer$forwardRef\");\n$RefreshReg$(_c2, \"TeyutoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useImperativeHandle","forwardRef","TeyutoPlayer","_s","_c","posElem","obj","onPlay","onPause","onTimeUpdate","onVolumeChange","ref","iframe","setIframe","currentTime","setCurrentTime","currentVolume","setCurrentVolume","idVideo","id","channel","console","error","log","options","defaults","height","width","autoplay","muted","controls","playbackRates","qualitySelector","playerColor","loop","captions","pip","seekButtons","lowLatency","token","finalOptions","urlIframe","iframeElement","document","getElementById","videoframe","responsive","querySelector","innerHTML","src","play","contentWindow","postMessage","function","pause","getCurrentTime","param","mute","unmute","setVolume","getVolume","on","args","addEventListener","handleMessage","data","event","JSON","parse","type","values","dispatchEvent","CustomEvent","detail","e","window","removeEventListener","_c2","$RefreshReg$"],"sources":["/home/marc/Documents/work/teyuto/teyuto-react-player/src/TeyutoPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\n\nconst TeyutoPlayer = forwardRef(({ posElem, obj, onPlay, onPause, onTimeUpdate, onVolumeChange }, ref) => {\n  const [iframe, setIframe] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentVolume, setCurrentVolume] = useState(1); // Assuming the volume ranges from 0 to 1\n  const idVideo = obj.id;\n\n  useEffect(() => {\n    if (!obj.channel) {\n      console.error(\"Missing channel header\");\n      return;\n    }\n    console.log(\"INIT Teyuto Player SDK\");\n\n    const channel = obj.channel;\n    const options = obj.options;\n\n    const defaults = {\n      height: 315,\n      width: 560,\n      autoplay: 'on',\n      muted: 'off',\n      controls: 'on',\n      playbackRates: 'on',\n      qualitySelector: 'on',\n      playerColor: '',\n      loop: 'off',\n      captions: 'on',\n      pip: 'off',\n      seekButtons: 'off',\n      lowLatency: 'off',\n      token: ''\n    };\n\n    const finalOptions = { ...defaults, ...options };\n\n    const urlIframe = `https://teyuto.tv/video/player?w=${idVideo}&cid=${channel}&token=${finalOptions.token}&auto=${finalOptions.autoplay}&muted=${finalOptions.muted}&controls=${finalOptions.controls}&playbackRates=${finalOptions.playbackRates}&qualitySelector=${finalOptions.qualitySelector}&playerColor=${finalOptions.playerColor}&loop=${finalOptions.loop}&captions=${finalOptions.captions}&seekButtons=${finalOptions.seekButtons}&lowLatency=${finalOptions.lowLatency}`;\n\n    const iframeElement = document.getElementById(`iframePlayerTeyuto-${idVideo}`);\n    if (!iframeElement) {\n      // If the iframe doesn't exist, create it\n      let videoframe;\n      if (finalOptions.responsive !== 'on') {\n        videoframe = `<iframe id=\"iframePlayerTeyuto-${idVideo}\" width=\"${finalOptions.width}\" height=\"${finalOptions.height}\" src=\"${urlIframe}\" frameborder=\"0\" allow=\"autoplay\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" scrolling=\"no\"></iframe>`;\n      } else {\n        videoframe = `<div style=\"position: relative;padding-bottom: 56.25%;height: 0; overflow: hidden;\"><iframe id=\"iframePlayerTeyuto-${idVideo}\" style=\"position: absolute;top: 0;left: 0;width: 100%;height: 100%;\" src=\"${urlIframe}\" frameborder=\"0\" allow=\"autoplay\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" scrolling=\"no\"></iframe></div>`;\n      }\n      document.querySelector(posElem).innerHTML = videoframe;\n      setIframe(document.getElementById(`iframePlayerTeyuto-${idVideo}`));\n    } else {\n      // If the iframe already exists, update its properties\n      iframeElement.src = urlIframe;\n      iframeElement.width = finalOptions.width;\n      iframeElement.height = finalOptions.height;\n    }\n\n  }, [obj, posElem, idVideo]);\n\n  useImperativeHandle(ref, () => ({\n    play: () => {\n      iframe.contentWindow.postMessage(\n        {\n          function: \"play\"\n        },\n        '*'\n      );\n    },\n    pause: () => {\n      iframe.contentWindow.postMessage(\n        {\n          function: \"pause\"\n        },\n        '*'\n      );\n    },\n    getCurrentTime: () => {\n      return currentTime;\n    },\n    setCurrentTime: (param) => {\n      iframe.contentWindow.postMessage(\n        {\n          function: \"setCurrentTime\",\n          param: param\n        },\n        '*'\n      );\n    },\n    mute: () => {\n      iframe.contentWindow.postMessage(\n        {\n          function: \"mute\"\n        },\n        '*'\n      );\n    },\n    unmute: () => {\n      iframe.contentWindow.postMessage(\n        {\n          function: \"unmute\"\n        },\n        '*'\n      );\n    },\n    setVolume: (param) => {\n      iframe.contentWindow.postMessage(\n        {\n          function: \"setVolume\",\n          param: param\n        },\n        '*'\n      );\n    },\n    getVolume: () => {\n      return currentVolume;\n    },\n    on: (...args) => {\n      document.querySelector(posElem).addEventListener(...args);\n    }\n  }));\n\n  useEffect(() => {\n    const handleMessage = ({ data }) => {\n      try {\n        let event = JSON.parse(data);\n        console.log(event);\n\n        if (event.type === 'currentTime') {\n          setCurrentTime(event.values.currentTime);\n          if (onTimeUpdate) onTimeUpdate(event.values.currentTime);\n        } else if (event.type === 'volume') {\n          setCurrentVolume(event.values.currentVolume);\n          if (onVolumeChange) onVolumeChange(event.values.currentVolume);\n        } else {\n          document.querySelector(posElem).dispatchEvent(new CustomEvent(event.type, { detail: { idVideo: event.idVideo, data: event.data } }));\n          if (event.type === 'play' && onPlay) onPlay();\n          if (event.type === 'pause' && onPause) onPause();\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [onPlay, onPause, onTimeUpdate, onVolumeChange, posElem]);\n\n  return null;\n});\n\nexport default TeyutoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}